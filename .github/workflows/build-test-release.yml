name: CI
on:
  push:
    branches:
      - "main"
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches: [ main ]
jobs:
  fossa-scan:
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - run: |
          curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install-latest.sh | bash
          fossa analyze --debug
          fossa report attribution --format text > /tmp/THIRDPARTY
        env:
          FOSSA_API_KEY: ${{ secrets.FOSSA_API_KEY }}
      - uses: actions/upload-artifact@v4
        with:
          name: THIRDPARTY
          path: /tmp/THIRDPARTY
      - run: fossa test --debug
        env:
          FOSSA_API_KEY: ${{ secrets.FOSSA_API_KEY }}

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - uses: pre-commit/action@v3.0.1

  test-unit:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version: [ 3.7, 3.8, 3.9, "3.10", "3.11", "3.12" ]
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - run: |
          curl -sSL https://install.python-poetry.org | python3 - --version 1.5.1
          poetry install
          poetry run pytest --junitxml=test-results/junit.xml
      - uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: test-results-unit-python-${{ matrix.python-version }}
          path: test-results/*

  compliance-copyrights:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: apache/skywalking-eyes@v0.7.0

  publish:
    needs:
      - fossa-scan
      - compliance-copyrights
      - pre-commit
      - test-unit
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v5
        with:
          # Very important: semantic-release won't trigger a tagged
          # build if this is not set false
          persist-credentials: false
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - run: |
          curl -sSL https://install.python-poetry.org | python3 - --version 1.5.1
          poetry install
          poetry build
      - id: semantic
        uses: splunk/semantic-release-action@v1.3
        with:
          git_committer_name: ${{ secrets.SA_GH_USER_NAME }}
          git_committer_email: ${{ secrets.SA_GH_USER_EMAIL }}
          gpg_private_key: ${{ secrets.SA_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.SA_GPG_PASSPHRASE }}
          extra_plugins: |
            semantic-release-replace-plugin
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_ADMIN }}
      - if: ${{ steps.semantic.outputs.new_release_published == 'true' }}
        run: |
          poetry build
          poetry publish -n -u ${{ secrets.PYPI_USERNAME }} -p ${{ secrets.PYPI_TOKEN }}
